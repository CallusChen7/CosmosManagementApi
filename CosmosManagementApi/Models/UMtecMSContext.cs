// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace CosmosManagementApi.Models
{
    public partial class UMtecMSContext : DbContext
    {
        public UMtecMSContext()
        {
        }

        public UMtecMSContext(DbContextOptions<UMtecMSContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Budgets> Budgets { get; set; }
        public virtual DbSet<Expenses> Expenses { get; set; }
        public virtual DbSet<Projects> Projects { get; set; }
        public virtual DbSet<Schedules> Schedules { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Budgets>(entity =>
            {
                entity.Property(e => e.Id).HasComment("Budget Primary Key");

                entity.Property(e => e.AbAmount)
                    .HasColumnName("AB_amount")
                    .HasComment("Available balance amount");

                entity.Property(e => e.Amount).HasComment("reserved amount");

                entity.Property(e => e.BudgetName)
                    .HasMaxLength(255)
                    .HasColumnName("Budget_name")
                    .HasComment("Budget Name");

                entity.Property(e => e.Currency)
                    .HasMaxLength(125)
                    .HasComment("Currency type");

                entity.Property(e => e.DeletedTime)
                    .HasColumnType("datetime")
                    .HasComment("WhenDeleted");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasComment("Budget Name Description");

                entity.Property(e => e.IsDeleted).HasComment("1forDeleted");

                entity.Property(e => e.ProjectId).HasComment("Reference key to project");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .HasComment("Remark of correlate budgets");

                entity.HasOne(d => d.Project)
                    .WithMany(p => p.Budgets)
                    .HasForeignKey(d => d.ProjectId)
                    .HasConstraintName("FK__Budgets__Project__2B3F6F97");
            });

            modelBuilder.Entity<Expenses>(entity =>
            {
                entity.Property(e => e.Id).HasComment("Primary key for Expenses");

                entity.Property(e => e.Amount).HasComment("MOP amount");

                entity.Property(e => e.ApAmount)
                    .HasColumnName("AP_amount")
                    .HasComment("Actual Paid Amount");

                entity.Property(e => e.BrAmount)
                    .HasColumnName("BR_amount")
                    .HasComment("Budget Reserved Amount");

                entity.Property(e => e.BudgetId).HasComment("Reference key budget");

                entity.Property(e => e.DeletedTime)
                    .HasColumnType("datetime")
                    .HasComment("WhenDeleted");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .HasComment("Description");

                entity.Property(e => e.ExpenseName)
                    .HasMaxLength(255)
                    .HasColumnName("Expense_name")
                    .HasComment("Expense name");

                entity.Property(e => e.Forecast)
                    .HasColumnType("date")
                    .HasComment("Forecast date");

                entity.Property(e => e.IsDeleted).HasComment("1fordeleted");

                entity.Property(e => e.Period)
                    .HasMaxLength(255)
                    .HasComment("Service period");

                entity.Property(e => e.PrNo)
                    .HasMaxLength(255)
                    .HasColumnName("PR_no")
                    .HasComment("PR service contract number");

                entity.Property(e => e.ProposalNo)
                    .HasMaxLength(255)
                    .HasColumnName("Proposal_no")
                    .HasComment("Proposal reference number");

                entity.Property(e => e.RpAmount)
                    .HasColumnName("RP_amount")
                    .HasComment("Reserved but not paid amount");

                entity.Property(e => e.VendorName)
                    .HasMaxLength(255)
                    .HasColumnName("Vendor_name")
                    .HasComment("Vendor name");

                entity.HasOne(d => d.Budget)
                    .WithMany(p => p.Expenses)
                    .HasForeignKey(d => d.BudgetId)
                    .HasConstraintName("FK__Expenses__Budget__2C3393D0");
            });

            modelBuilder.Entity<Projects>(entity =>
            {
                entity.Property(e => e.Id).HasComment("Primary key for Project Table");

                entity.Property(e => e.CommissionedUnit)
                    .HasMaxLength(255)
                    .HasColumnName("Commissioned_unit")
                    .HasComment("Commissioned_unit");

                entity.Property(e => e.ContactEmail)
                    .HasMaxLength(255)
                    .HasColumnName("Contact_email")
                    .HasComment("Contacter email");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(255)
                    .HasColumnName("Contact_name")
                    .HasComment("Contacter name");

                entity.Property(e => e.ContactPhone)
                    .HasMaxLength(255)
                    .HasColumnName("Contact_phone")
                    .HasComment("Contacter phone number");

                entity.Property(e => e.Curency)
                    .HasMaxLength(125)
                    .HasComment("Currency type");

                entity.Property(e => e.DeletedTime)
                    .HasColumnType("datetime")
                    .HasComment("WhenDeleted");

                entity.Property(e => e.EndDate)
                    .HasColumnType("date")
                    .HasColumnName("End_date")
                    .HasComment("Project end date");

                entity.Property(e => e.IsDeleted).HasComment("1FORDeleted");

                entity.Property(e => e.ManagementFee)
                    .HasColumnType("decimal(12, 2)")
                    .HasComment("ManagementFee");

                entity.Property(e => e.ManagementPer)
                    .HasColumnName("Management_Per")
                    .HasComment("ManagementFee percentage");

                entity.Property(e => e.ProjectEApprovedDate)
                    .HasColumnType("date")
                    .HasColumnName("Project_e_approved_date")
                    .HasComment("Engagement approved date");

                entity.Property(e => e.ProjectENumber)
                    .HasMaxLength(255)
                    .HasColumnName("Project_e_number")
                    .HasComment("Engagement Number");

                entity.Property(e => e.ProjectInvestorFaculty)
                    .HasMaxLength(255)
                    .HasColumnName("Project_investor_faculty")
                    .HasComment("PI Faculty");

                entity.Property(e => e.ProjectInvestorName)
                    .HasMaxLength(255)
                    .HasColumnName("Project_investor_name")
                    .HasComment("Project Investor Name");

                entity.Property(e => e.ProjectName)
                    .HasMaxLength(255)
                    .HasColumnName("Project_name")
                    .HasComment("Project name");

                entity.Property(e => e.ProjectNameEn)
                    .HasMaxLength(255)
                    .HasColumnName("Project_name_en")
                    .HasComment("Project English Name");

                entity.Property(e => e.ProjectNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Project_number")
                    .HasComment("Project Number");

                entity.Property(e => e.ProjectScope)
                    .HasMaxLength(255)
                    .HasColumnName("Project_scope")
                    .HasComment("Scope");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .HasComment("Remark for Project");

                entity.Property(e => e.StartDate)
                    .HasColumnType("date")
                    .HasColumnName("Start_date")
                    .HasComment("Project start date");

                entity.Property(e => e.TotalIncome)
                    .HasColumnName("Total_income")
                    .HasComment("Project total income amount");
            });

            modelBuilder.Entity<Schedules>(entity =>
            {
                entity.Property(e => e.Id).HasComment("Primary key for schedules");

                entity.Property(e => e.Amount).HasComment("Received Amount");

                entity.Property(e => e.Deliverables).HasMaxLength(255);

                entity.Property(e => e.ExpectedDate)
                    .HasColumnType("date")
                    .HasColumnName("Expected_date")
                    .HasComment("Expected received date");

                entity.Property(e => e.ProjectId).HasComment("ReferenceKet to Project");

                entity.HasOne(d => d.Project)
                    .WithMany(p => p.Schedules)
                    .HasForeignKey(d => d.ProjectId)
                    .HasConstraintName("FK__Schedules__Proje__34C8D9D1");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}